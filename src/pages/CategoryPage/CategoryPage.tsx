import { Section, Cell, Button, List, Avatar, Text } from '@telegram-apps/telegram-ui';
import type { FC } from 'react';
import { useParams, useNavigate } from 'react-router-dom';

import { Page } from '@/components/Page.tsx';

export const CategoryPage: FC = () => {
  const { id } = useParams<{ id: string }>();
  const navigate = useNavigate();
  
  // This would come from a real API in a production app
  const categories = [
    { id: 1, name: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', icon: 'üì±' },
    { id: 2, name: '–ë—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞', icon: 'üîå' },
    { id: 3, name: '–û–¥–µ–∂–¥–∞', icon: 'üëï' },
    { id: 4, name: '–ü—Ä–æ–¥—É–∫—Ç—ã', icon: 'üçé' },
    { id: 5, name: '–†–µ—Å—Ç–æ—Ä–∞–Ω—ã', icon: 'üçî' },
    { id: 6, name: '–ö—Ä–∞—Å–æ—Ç–∞', icon: 'üíÑ' }
  ];
  
  const category = categories.find(cat => cat.id === Number(id)) || categories[0];
  
  // Mock data for discounts in this category
  const discountsInCategory = [
    {
      id: 1,
      title: '–°–∫–∏–¥–∫–∞ 30% –Ω–∞ —Å–º–∞—Ä—Ç—Ñ–æ–Ω—ã',
      store: '–ú–í–∏–¥–µ–æ',
      discount: '30%',
      category: category.name,
      image: 'https://via.placeholder.com/100',
      distance: '1.2 –∫–º'
    },
    {
      id: 2,
      title: '–°–∫–∏–¥–∫–∞ –Ω–∞ –Ω–∞—É—à–Ω–∏–∫–∏',
      store: 'DNS',
      discount: '25%',
      category: category.name,
      image: 'https://via.placeholder.com/100',
      distance: '2.5 –∫–º'
    },
    {
      id: 3,
      title: '–†–∞—Å–ø—Ä–æ–¥–∞–∂–∞ –ø–ª–∞–Ω—à–µ—Ç–æ–≤',
      store: '–≠–ª—å–¥–æ—Ä–∞–¥–æ',
      discount: '40%',
      category: category.name,
      image: 'https://via.placeholder.com/100',
      distance: '0.8 –∫–º'
    },
    {
      id: 4,
      title: '–ê–∫—Ü–∏—è –Ω–∞ —É–º–Ω—ã–µ —á–∞—Å—ã',
      store: '–ú.–í–∏–¥–µ–æ',
      discount: '20%',
      category: category.name,
      image: 'https://via.placeholder.com/100',
      distance: '3.1 –∫–º'
    },
    {
      id: 5,
      title: '–°–∫–∏–¥–∫–∞ –Ω–∞ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã',
      store: '–°–≤—è–∑–Ω–æ–π',
      discount: '50%',
      category: category.name,
      image: 'https://via.placeholder.com/100',
      distance: '1.7 –∫–º'
    }
  ];

  const handleDiscountClick = (id: number) => {
    navigate(`/discount/${id}`);
  };

  const renderFilters = () => (
    <div style={{ 
      display: 'flex', 
      overflowX: 'auto', 
      gap: '8px', 
      padding: '12px', 
      marginBottom: '12px' 
    }}>
      <Button size="s" mode="outline" style={{ whiteSpace: 'nowrap' }}>–í—Å–µ —Å–∫–∏–¥–∫–∏</Button>
      <Button size="s" mode="outline" style={{ whiteSpace: 'nowrap' }}>–†—è–¥–æ–º</Button>
      <Button size="s" mode="outline" style={{ whiteSpace: 'nowrap' }}>–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ</Button>
      <Button size="s" mode="outline" style={{ whiteSpace: 'nowrap' }}>–ù–æ–≤—ã–µ</Button>
      <Button size="s" mode="outline" style={{ whiteSpace: 'nowrap' }}>–ó–∞–∫–∞–Ω—á–∏–≤–∞—é—Ç—Å—è</Button>
    </div>
  );

  return (
    <Page back={true}>
      <List>
        <Section 
          header={`${category.icon} ${category.name} (${discountsInCategory.length})`}
          children={renderFilters()}
        />
        
        <Section>
          {discountsInCategory.map(discount => (
            <Cell
              key={discount.id}
              before={
                <Avatar size={48} src={discount.image} />
              }
              subtitle={`${discount.store} ‚Ä¢ ${discount.discount}`}
              after={
                <Text style={{ 
                  color: 'var(--tg-theme-button-color)', 
                  fontWeight: 'bold' 
                }}>
                  {discount.distance}
                </Text>
              }
              onClick={() => handleDiscountClick(discount.id)}
            >
              {discount.title}
            </Cell>
          ))}
        </Section>
        
        <Section>
          <div style={{ textAlign: 'center', padding: '12px' }}>
            <Button size="m" mode="outline">–ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞ –∫–∞—Ä—Ç–µ</Button>
          </div>
        </Section>
      </List>
    </Page>
  );
}; 